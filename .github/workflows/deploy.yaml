name: Deploy Docker Image with Optional Docker Install

on:
  workflow_dispatch:
    inputs:
      install_docker:
        description: "Install Docker if not present"
        required: true
        default: 'false'
  workflow_call:
    secrets:
      SERVER_USER:
        required: true
      SERVER_PASSWORD:
        required: true
      DISCORD_BOT_TOKEN:
        required: true
      DISCORD_CHANNEL_ID:
        required: true
      ZOMBOID_SERVICE_NAME:
        required: true
      DOCKER_USERNAME:
        required: true
      DOCKER_PASSWORD:
        required: true

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: SSH into Server and Install Docker if Necessary
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: 208.167.237.54
          username: ${{ secrets.SERVER_USER }}
          password: ${{ secrets.SERVER_PASSWORD }}
          port: 22
          script: |
            # Check if Docker is installed
            if ! [ -x "$(command -v docker)" ]; then
              echo "Docker is not installed."
              if [[ "${{ inputs.install_docker }}" == "true" ]]; then
                echo "Installing Docker..."
                sudo apt-get update
                sudo apt-get install -y docker.io
                sudo systemctl start docker
                sudo systemctl enable docker
              else
                echo "Docker installation skipped. Exiting..."
                exit 1
              fi
            else
              echo "Docker is already installed."
            fi

      - name: SSH into Server and Deploy Docker Container
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: 208.167.237.54
          username: ${{ secrets.SERVER_USER }}
          password: ${{ secrets.SERVER_PASSWORD }}
          port: 22
          script: |
            # Pull the latest Docker image and run it with the host's PID namespace
            if [ $(docker ps -q -f name=zomboid-crash-monitor) ]; then
              echo "Stopping and removing the existing container..."
              docker stop zomboid-crash-monitor
              docker rm zomboid-crash-monitor
            fi
            
            docker pull ${{ secrets.DOCKER_USERNAME }}/zomboid-crash-monitor:latest
            docker run -d --name zomboid-crash-monitor --pid=host -e DISCORD_BOT_TOKEN=${{ secrets.DISCORD_BOT_TOKEN }} \
              -e DISCORD_CHANNEL_ID=${{ secrets.DISCORD_CHANNEL_ID }} \
              -e ZOMBOID_SERVICE_NAME=${{ secrets.ZOMBOID_SERVICE_NAME }} \
              ${{ secrets.DOCKER_USERNAME }}/zomboid-crash-monitor:latest